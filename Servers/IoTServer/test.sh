#!/bin/bash
# Tests lambda

exit_with_message() {
    echo $1
    exit
}

FUNCTION_NAME="sudotrace-iot"

# 400s
echo "Should be 400"
aws lambda invoke --function-name ${FUNCTION_NAME} --cli-binary-format raw-in-base64-out --payload '{"notathing": "yay"}' output.test && grep "400" output.test || exit_with_message "Test failed should be 400"
aws lambda invoke --function-name ${FUNCTION_NAME} --cli-binary-format raw-in-base64-out --payload '{"id": "0ca134b57a84c661", "notathing": "yay"}' output.test && grep "400" output.test || exit_with_message "Test failed should be 400"

# 200s
echo "Should be 200"
aws lambda invoke --function-name ${FUNCTION_NAME} --cli-binary-format raw-in-base64-out --payload '{"id": "716dda8dff334f3d9c0cfa2d63bb4caa", "image": "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"}' output.test && grep "200" output.test || exit_with_message "200 failed"

rm output.test
